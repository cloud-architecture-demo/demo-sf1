#!/usr/bin/env groovy

def label = "k8sagent-payment-build"
def home = "/home/jenkins"
def workspace = "${home}/workspace/payment-build"
def workdir = "${workspace}/payment-build/"

podTemplate(label: label,
    containers: [
        containerTemplate(name: 'maven', image: 'cloudarchitecturedemo/agent:0.1', alwaysPullImage: true, ttyEnabled: true, command: 'cat',
            envVars: [
                envVar(key: 'DOCKER_HOST', value: 'tcp://localhost:2375'),
            ],
        ),
        containerTemplate(name: 'docker', image: 'docker:20.10.6-dind', privileged: true, ttyEnabled: true,
            envVars: [
                envVar(key: 'DOCKER_TLS_CERTDIR', value: ''),
            ],
        ),
        ],
        volumes: [
            emptyDirVolume(mountPath: '/var/lib/docker', memory: false),
        ],
        ) {
    node(label) {
        stage('payment product build pipeline') {
            withCredentials([usernamePassword(credentialsId: 'github-user-token', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                sleep time: 10, unit: 'SECONDS'
                container('maven') {
                    sh '''

                        echo "This is the payment build pipeline."

                        echo ""
                        echo "GO Path: ${GOPATH}"

                        ## Prepare environment
                        AWS_ACCOUNT=$(aws sts get-caller-identity --query Account --output text)
                        export PATH=$PATH:/home/jenkins/bin/
                        mkdir -p $GOPATH/src/github.com/microservices-demo/payment/
                        git clone https://github.com/cloud-architecture-demo/payment.git
                        mv ./payment $GOPATH/src/github.com/microservices-demo/payment/paymentsvc/

                        cd $GOPATH/src/github.com/microservices-demo/payment/paymentsvc/
                        go get -u github.com/FiloSottile/gvt
                        gvt restore

                        go build -o payment

                        docker build                                                  \
                        -t cloud-architecture-demo/payment:v0.1                       \
                        -t ${AWS_ACCOUNT}.dkr.ecr.us-east-1.amazonaws.com/payment:v0.1    \
                        -f docker/payment/Dockerfile .

                        $(aws ecr get-login --no-include-email --region us-east-1)
                        docker push ${AWS_ACCOUNT}.dkr.ecr.us-east-1.amazonaws.com/payment:v0.1

                    '''
                }
            }
        }
    }
}